"""Match commentary."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_wallstream.ipynb.

# %% auto 0
__all__ = ['filepath', 'match_ids', 'fetch_wallstream', 'save_wallstream']

# %% ../nbs/03_wallstream.ipynb 3
import warnings
warnings.filterwarnings('ignore')

import json


import logging
import os
import requests
from pathlib import Path

from .constants import *
from .matches import *

# %% ../nbs/03_wallstream.ipynb 5
def fetch_wallstream(match_id):
    url = f"https://www.indiansuperleague.com/functions/wallstream/?sport_id=2&client_id=5KEUfrMT/+2lgecJyh42zA==&match_id={match_id}"
    headers = {
        'accept': '*/*',
        'referer': 'https://www.indiansuperleague.com/',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36'
    }
    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        logging.info('API request successful. Content length: {}'.format(len(response.content)))
        return response.text
    else:
        logging.error('API request failed. Status code: {}'.format(response.status_code))
        return None

# %% ../nbs/03_wallstream.ipynb 8
def save_wallstream(wallstream, filepath):
    if wallstream:
        os.makedirs(os.path.dirname(filepath), exist_ok=True)
        with open(filepath, 'a') as f:
            f.write(wallstream + "\n")

# %% ../nbs/03_wallstream.ipynb 11
#| eval: false
#| output: false
filepath = data_dir / 'matches.txt'
match_ids = get_live_matches(filepath)
logging.info('Live matches: {} [{}]'.format(len(match_ids), ', '.join(match_ids)))

for match_id in match_ids:
    match_wallstream = fetch_wallstream(match_id)
    filepath = data_dir / f'wallstream/{match_id}.txt'
    save_wallstream(match_wallstream, filepath)
