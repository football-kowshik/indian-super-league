"""Live stats of ISL matches."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_stats.ipynb.

# %% auto 0
__all__ = ['log_dir', 'data_dir', 'fetch_match_stats', 'save_match_stats']

# %% ../nbs/02_stats.ipynb 3
import warnings
warnings.filterwarnings('ignore')

import json
import logging
import os
import requests
from pathlib import Path

from .matches import *

# %% ../nbs/02_stats.ipynb 5
log_dir = Path('../logs')
if not os.path.exists(log_dir):
    os.makedirs(log_dir)

data_dir = Path('../data/stats/')
if not os.path.exists(data_dir):
    os.makedirs(data_dir)

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    filename=os.path.join(log_dir, 'stats.log'),
    filemode='a'
)

# %% ../nbs/02_stats.ipynb 9
def fetch_match_stats(match_id):
    url = f'https://www.indiansuperleague.com/football/live/india_sl_stats/json/{match_id}.json'
    headers = {
        'accept': '*/*',
        'referer': 'https://www.indiansuperleague.com/',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36'
    }
    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        logging.info('API request successful. Content length: {}'.format(len(response.content)))
        return response.text
    else:
        logging.error('API request failed. Status code: {}'.format(response.status_code))
        return None

# %% ../nbs/02_stats.ipynb 12
def save_match_stats(stats, filepath):
    if stats is not None:
        with open(filepath, 'a') as f:
            f.write(stats + "\n")
